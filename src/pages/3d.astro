<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0">
    <title>3D Logo</title>
    <style is:global>
        :root {
            background-color: #202020;
            margin: 0;
        }
    </style>
</head>

<body>
    <canvas id="view"></canvas>
    <script type="importmap" is:inline>
        {
            "imports": {
                "three": "https://cdn.jsdelivr.net/npm/three@0.177.0/build/three.module.js",
                "three/addons/": "https://cdn.jsdelivr.net/npm/three@0.177.0/examples/jsm/"
            }
        }
    </script>
    <script type="module" is:inline>
        import * as THREE from 'three';
        import {GLTFLoader} from 'three/addons/loaders/GLTFLoader.js';
        import {OrbitControls} from 'three/addons/controls/OrbitControls.js';

        const canvas = document.getElementById('view');

        const scene = new THREE.Scene();
        const loader = new GLTFLoader();
        const camera = new THREE.PerspectiveCamera(25, window.innerWidth / window.innerHeight, 0.1, 1000);
        camera.position.z = 128;
        const controls = new OrbitControls(camera, canvas);
        controls.target.set(0, 0, 0);
        controls.update();

        const ambientLight = new THREE.AmbientLight(0xffffff, 0.8);
        scene.add(ambientLight);

        const directionalLight = new THREE.DirectionalLight(0xffffff, 2.5);
        directionalLight.position.set(1, 1, 1);
        scene.add(directionalLight);

        loader.load('v2.glb', function (gltf) {
            scene.add(gltf.scene);
        }, undefined, function (error) {
            console.log(error);
        })

        const renderer = new THREE.WebGLRenderer({
            antialias: true,
            canvas,
            alpha: true,
        });
        renderer.setSize(window.innerWidth, window.innerHeight);
        renderer.setPixelRatio(window.devicePixelRatio);

        function animate() {
            renderer.render(scene, camera);
        }

        renderer.setAnimationLoop(animate);
    </script>
</body>

</html>
