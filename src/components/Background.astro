---

---
<style is:global>
#tbg {
    position: fixed;
    top: 0;
    left: 0;
    width: auto;
    height: 100vh;
    z-index: -1;
}

@media (orientation: landscape) {
    #tbg {
        width: 100vw;
        height: auto;
    }
}

</style>
<svg id="tbg">
    <defs>
        <symbol id="cross">
            <line x1="0" y1="0" x2="10" y2="10" stroke="#6c7086" />
            <line x1="10" y1="0" x2="0" y2="10" stroke="#6c7086" />
        </symbol>
        <symbol id="triangle">
            <path d="M0 0 L5 10 L10 0 Z" fill="none" stroke="#6c7086" />
        </symbol>
    </defs>
</svg>
<script>
const
    win = window,
    doc = document,
    tbg = doc.getElementById("tbg")!,
    base = tbg.innerHTML;
let resize = () => {
    let width = 901, height = 1601;
    if (win.innerWidth > win.innerHeight) { width = 1601, height = 901; }
    tbg.setAttribute("viewBox", `0 0 ${width} ${height}`);
    let state = 2;
    let prng = (limit: number) => {
        state = (1103515245 * state + 12345) % 2**31;
        return state % limit;
    };
    let content = base;
    let x1 = 0, y1 = 0, gen = false;
    for (let i = 0; i < 200; i++) {
        let x = prng(width), y = prng(height);
        if (gen) {
            content += `<line x1="${x1}"y1="${y1}"x2="${x}"y2="${y}"stroke="#585b70"/>`;
        }
        x1 = x, y1 = y, gen = prng(20) == 0;
        content += `<use href="#${["cross", "triangle"][prng(3)%2]}"x="${x-5}"y="${y-5}"/>`;
    }
    tbg.innerHTML = content;
}
resize();
win.onresize = resize;
</script>
